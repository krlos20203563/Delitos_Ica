graves = sum(enfermedad == "grave"),
sin_señales = sum(enfermedad == "sin"),
con_señales = sum(enfermedad == "con")
)
head(pregunta5)
pregunta5 <- pregunta5 %>%
mutate(relacion = con_señales/sin_señales)
head(pregunta5)
library(knitr)
library(heatmap3)
library(plotly)
# Preparar los datos para el heatmap
heatmap_data <- pregunta5 %>%
select(con_señales, sin_señales, relacion) %>%
as.matrix()
# Añadir nombres de fila
rownames(heatmap_data) <- pregunta5$departamento
# Crear el heatmap
heatmap(heatmap_data, Rowv = NA, Colv = NA, scale = "none",
main = "Casos de Dengue con y sin Síntomas por Región",
xlab = "Tipo de Caso", ylab = "Región",
col = heat.colors(256))
if (!require("devtools")) install.packages("devtools")
devtools::install_github("talgalili/d3heatmap")
library(d3heatmap)
d3heatmap(mtcars, scale = "column", colors = "Spectral")
d3heatmap(heatmap_data, scale = "column", colors="Spectral",)
View(heatmap_data)
library(d3heatmap)
d3heatmap(heatmap_data, scale = "column", colors="Spectral",)
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggx")
setwd("C:/Users/Carlos Daniel/Documents/Chamba_Burkli/Delitos_Ica")
knitr::opts_chunk$set(echo = TRUE)
delitos=st_read("delitosIca.gpkg")
library(sf)
delitos=st_read("delitosIca.gpkg")
View(delitos)
delitos=select(delitos(c(4:6,,12:14,16,18,20,24,26,28,31,40)))
library(dplyr)
delitos=select(delitos, c(4:6,,12:14,16,18,20,24,26,28,31,40))
View(delitos)
library(ggplot2)
library(sp)
mapDPT=sf::read_sf("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/distritos_1874/DISTRITOS1874.shp")
ggplot(mapDPT) + geom_sf()
library(ggplot2)
library(sp)
mapDIST=sf::read_sf("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/distritos_1874/DISTRITOS1874.shp")
ggplot(mapDIST) + geom_sf()
library(leaflet)
library(leaflet)
mapa1 <- leaflet() %>%
addTiles() %>%
fitBounds(-18.348696, -0.038712, -81.328125, -68.671875) %>%
addCircleMarkers(data = delitos,
lng = ~long_hecho,
lat = ~lat_hecho,
color = ~color_turno,
radius = 6,
fill = TRUE,
fillOpacity = 0.2,
opacity = 0.6,
popup = ~paste(distrito, provincia, sep = "")) %>%
addPolygons(data = mapDIST, # Agregar las divisiones distritales
color = "black", # Color del borde
fillColor = "transparent", # Color de relleno transparente
fillOpacity = 0.5, # Opacidad del relleno
weight = 1) # Grosor del borde
asignar_color <- function(turno) {
colores <- c("madrugada" = "blue", "mañana" = "green", "tarde" = "orange", "noche" = "red")
return(colores[turno])
}
```{r}
delitos$color_turno <- asignar_color(delitos$turno_hech)
asignar_color <- function(turno) {
colores <- c("madrugada" = "blue", "mañana" = "green", "tarde" = "orange", "noche" = "red")
return(colores[turno])
}
delitos$color_turno <- asignar_color(delitos$turno_hech)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
delitos=st_read("delitosIca.gpkg")
View(delitos)
library(dplyr)
delitos=select(delitos, c(4:6,,11:14,16,18,20,24,26,28,31,40))
library(ggplot2)
library(sp)
mapDIST=sf::read_sf("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/distritos_1874/DISTRITOS1874.shp")
ggplot(mapDIST) + geom_sf()
asignar_color <- function(turno) {
colores <- c("madrugada" = "blue", "mañana" = "green", "tarde" = "orange", "noche" = "red")
return(colores[turno])
}
delitos$color_turno <- asignar_color(delitos$turno_hech)
library(leaflet)
mapa1 <- leaflet() %>%
addTiles() %>%
fitBounds(-18.348696, -0.038712, -81.328125, -68.671875) %>%
addCircleMarkers(data = delitos,
lng = ~long_hecho,
lat = ~lat_hecho,
color = ~color_turno,
radius = 6,
fill = TRUE,
fillOpacity = 0.2,
opacity = 0.6,
popup = ~paste(distrito, provincia, sep = "")) %>%
addPolygons(data = mapDIST, # Agregar las divisiones distritales
color = "black", # Color del borde
fillColor = "transparent", # Color de relleno transparente
fillOpacity = 0.5, # Opacidad del relleno
weight = 1) # Grosor del borde
# Agregar leyenda
mapa1 <- mapa1 %>%
addLegend("bottomleft",
colors = c("blue", "green", "orange", "red"),
labels = c("Madrugada", "Mañana", "Tarde", "Noche"),
opacity = 0.8)
# Visualizar el mapa final
mapa1
delitos$one=1
View(delitos)
library(leaflet)
mapa1 <- leaflet() %>%
addTiles() %>%
fitBounds(-15.36183, -13.07651, -76.31845, -74.93670) %>%
addCircleMarkers(data = delitos,
lng = ~long_hecho,
lat = ~lat_hecho,
color = ~color_turno,
radius = 6,
fill = TRUE,
fillOpacity = 0.2,
opacity = 0.6,
popup = ~paste(distrito, provincia, sep = "")) %>%
addPolygons(data = mapDIST, # Agregar las divisiones distritales
color = "black", # Color del borde
fillColor = "transparent", # Color de relleno transparente
fillOpacity = 0.5, # Opacidad del relleno
weight = 1) # Grosor del borde
# Agregar leyenda
mapa1 <- mapa1 %>%
addLegend("bottomleft",
colors = c("blue", "green", "orange", "red"),
labels = c("Madrugada", "Mañana", "Tarde", "Noche"),
opacity = 0.8)
# Visualizar el mapa final
mapa1
View(delitos)
table(delitos$tipo)
tipos=table(delitos$tipo)
tipo_delitos=as.data.frame(tipos)
View(tipo_delitos)
View(tipo_delitos)
ggplot(tipo_delitos, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
ggplot(delitos_df, aes(x = reorder(Var1, -Freq), y = Frecuencia)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "número de delitos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
ggplot(tipo_delitos, aes(x = reorder(Var1, -Freq), y = Frecuencia)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "número de delitos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
ggplot(tipo_delitos, aes(x = reorder(Var1, -Freq), y = Freq)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "número de delitos") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
names(tipo_delitos$Var1)
names(tipo_delitos$Var1)
names(tipo_delitos$Var1)
names(tipo_delitos)
#Renombrar
tipo_delitos[tipo_delitos$Var1=='ADMINISTRACION PUBLICA (DELITO','Var1']='Administracion publica'
tipo_delitos[tipo_delitos$Var1=='AMBIENTALES(DELITO)','Var1']='Ambientales'
tipo_delitos[tipo_delitos$Var1=='CONTRA LA DIGNIDAD HUMANA','Var1']='Contra la dignidad'
#Renombrar
tipo_delitos[tipo_delitos$Var1=='ADMINISTRACION PUBLICA (DELITO','Var1']='Administracion publica'
#Renombrar
tipo_delitos[tipo_delitos$Var1=='ADMINISTRACION PUBLICA (DELITO','Var1']='Administracion publica'
#Renombrar
tipo_delitos[tipo_delitos$Var1=='ADMINISTRACION PUBLICA (DELITO)','Var1']='Administracion publica'
#Renombrar
tipo_delitos[tipo_delitos$Var1=='ADMINISTRACION PUBLICA (DELITO)','Var1']='Administracion publica'
knitr::opts_chunk$set(echo = TRUE)
library(sf)
delitos=st_read("delitosIca.gpkg")
library(dplyr)
delitos=select(delitos, c(4:6,,11:14,16,18,20,24,26,28,31,40))
library(ggplot2)
library(sp)
mapDIST=sf::read_sf("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/distritos_1874/DISTRITOS1874.shp")
ggplot(mapDIST) + geom_sf()
asignar_color <- function(turno) {
colores <- c("madrugada" = "blue", "mañana" = "green", "tarde" = "orange", "noche" = "red")
return(colores[turno])
}
delitos$color_turno <- asignar_color(delitos$turno_hech)
library(leaflet)
mapa1 <- leaflet() %>%
addTiles() %>%
fitBounds(-15.36183, -13.07651, -76.31845, -74.93670) %>%
addCircleMarkers(data = delitos,
lng = ~long_hecho,
lat = ~lat_hecho,
color = ~color_turno,
radius = 6,
fill = TRUE,
fillOpacity = 0.2,
opacity = 0.6,
popup = ~paste(distrito, provincia, sep = "")) %>%
addPolygons(data = mapDIST, # Agregar las divisiones distritales
color = "black", # Color del borde
fillColor = "transparent", # Color de relleno transparente
fillOpacity = 0.5, # Opacidad del relleno
weight = 1) # Grosor del borde
# Agregar leyenda
mapa1 <- mapa1 %>%
addLegend("bottomleft",
colors = c("blue", "green", "orange", "red"),
labels = c("Madrugada", "Mañana", "Tarde", "Noche"),
opacity = 0.8)
# Visualizar el mapa final
mapa1
delitos$one=1
tipos=table(delitos$tipo)
tipo_delitos=as.data.frame(tipos)
View(tipo_delitos)
#Renombrar
tipo_delitos[tipo_delitos$Var1=='ADMINISTRACION PUBLICA (DELITO)','Var1']='Administracion publica'
tipo_delitos[tipo_delitos$Var1=='AMBIENTALES(DELITO)','Var1']='Ambientales'
library(sf)
delitos=st_read("delitosIca.gpkg")
library(dplyr)
delitos=select(delitos, c(4:6,,11:14,16,18,20,24,26,28,31,40))
delitos$one=1
tipos=table(delitos$tipo)
tipo_delitos=as.data.frame(tipos)
#Renombrar
tipo_delitos[tipo_delitos$Var1=='ADMINISTRACION PUBLICA (DELITO)','Var1']='Administracion publica'
tipo_delitos[tipo_delitos$Var1=='AMBIENTALES(DELITO)','Var1']='Ambientales'
tipo_delitos[tipo_delitos$Var1=='CONTRA LA DIGNIDAD HUMANA','Var1']='Contra la dignidad'
tipo_delitos[tipo_delitos$Var1=='FAMILIA (DELITO)','Var1']='Familia'
View(tipo_delitos)
tipo_delitos[tipo_delitos$Var1=='FE PUBLICA (DELITO)','Var1']='Fe pública'
tipo_delitos[tipo_delitos$Var1=='HONOR (DELITO)','Var1']='Honor'
tipo_delitos[tipo_delitos$Var1=='LIBERTAD (DELITO)','Var1']='Libertad'
tipo_delitos[tipo_delitos$Var1=='ORDEN ECONOMICO (DELITO)','Var1']='Economico'
tipo_delitos[tipo_delitos$Var1=='ORDEN FINANCIERO Y MONETARIO (DELITO)','Var1']='Financiero'
tipo_delitos[tipo_delitos$Var1=='PATRIMONIO (DELITO)','Var1']='Patrimoniales'
tipo_delitos[tipo_delitos$Var1=='PATRIMONIO CULTURAL (DELITO)','Var1']='Culturales'
tipo_delitos[tipo_delitos$Var1=='SEGURIDAD PUBLICA (DELITO)','Var1']='Seguridad publica'
tipo_delitos[tipo_delitos$Var1=='TRANQUILIDAD PUBLICA (DELITO)','Var1']='Tranquilidad'
tipo_delitos[tipo_delitos$Var1=='VIDA, EL CUERPO Y LA SALUD (DELITO)','Var1']='Vida, cuerpo y salud'
View(tipo_delitos)
library(sf)
delitos=st_read("delitosIca.gpkg")
library(dplyr)
delitos=select(delitos, c(4:6,,11:14,16,18,20,24,26,28,31,40))
asignar_color <- function(turno) {
colores <- c("madrugada" = "blue", "mañana" = "green", "tarde" = "orange", "noche" = "red")
return(colores[turno])
}
delitos$color_turno <- asignar_color(delitos$turno_hech)
delitos$one=1
tipos=table(delitos$tipo)
tipo_delitos=as.data.frame(tipos)
```{r}
View(tipo_delitos)
ggplot(delitos_df, aes(x = reorder(TipoDelito, -Frecuencia), y = Frecuencia)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
ggplot(tipo_delitos, aes(x = reorder(Var1, -Freq), y = Freq)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "Numero de denuncias") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
bar_tipo=ggplot(tipo_delitos, aes(x = reorder(Var1, -Freq), y = Freq)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "Numero de denuncias") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
library(ggthemes)
bar_tipo+theme_base()
bar_tipo+theme_fivethirtyeight()
bar_tipo+
```
bar_tipo
patrimoniales=filter(delitos, tipo=='PATRIMONIO (DELITO)')
View(patrimoniales)
modalidades=table(patrimoniales$modalidad)
modalidaddes=as.data.frame(modalidades)
View(modalidaddes)
modalidades=as.data.frame(modalidades)
library(ggthemes)
bar_modad=ggplot(modalidades, aes(x = reorder(Var1, -Freq), y = Freq)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Modalidades de delitos patrimoniales más recurrentes en Ica",
x = "Modalidades",
y = "Numero de denuncias") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
bar_modad
table(patrimoniales$turno_hech)
modalidades
library(magrittr)
library(magrittr)
modalidades%>%arrange(desc(frecuencia))
library(magrittr)
modalidades%>%arrange(desc(Freq))
install.packages("kableExtra")
library(kableExtra)
modalidades%>%arrange(desc(Freq))15)%>%kbl()%>%kable_styling()
mod_order=modalidades%>%arrange(desc(Freq))
head(mod_order,15)%>%kbl()%>%kable_styling()
names(mod_order)=c("Modalidad","Denuncias")
head(mod_order,15)%>%kbl()%>%kable_styling()
head(mod_order,30)%>%kbl()%>%kable_styling()
coords <- st_coordinates(patrimoniales)
View(coords)
# Coordenadas del centro de Lima
centroidIca <- st_centroid(st_union(patrimoniales))
# Crear el mapa base centrado en Lima
map <- leaflet() %>%
addTiles(urlTemplate = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
setView(lng = st_coordinates(centroidIca)[1], lat = st_coordinates(centroidIca)[2], zoom = 10)
# Añadir la capa de mapa de calor
map <- map %>%
addHeatmap(lng = coords[,1], lat = coords[,2], blur = 20, max = 0.05)
library(leaflet)
library(sf)
library(dplyr)
# Coordenadas del centro de Lima
centroidIca <- st_centroid(st_union(patrimoniales))
# Crear el mapa base centrado en Lima
map <- leaflet() %>%
addTiles(urlTemplate = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
setView(lng = st_coordinates(centroidIca)[1], lat = st_coordinates(centroidIca)[2], zoom = 10)
# Añadir la capa de mapa de calor
map <- map %>%
addHeatmap(lng = coords[,1], lat = coords[,2], blur = 20, max = 0.05)
install.packages("leaflet.extras")
# Coordenadas del centro de Lima
centroidIca <- st_centroid(st_union(patrimoniales))
# Crear el mapa base centrado en Lima
map <- leaflet() %>%
addTiles(urlTemplate = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
setView(lng = st_coordinates(centroidIca)[1], lat = st_coordinates(centroidIca)[2], zoom = 10)
# Añadir la capa de mapa de calor
map <- map %>%
addHeatmap(lng = coords[,1], lat = coords[,2], blur = 20, max = 0.05)
library(leaflet.extras)
library(leaflet.extras)
# Coordenadas del centro de Lima
centroidIca <- st_centroid(st_union(patrimoniales))
# Crear el mapa base centrado en Lima
map <- leaflet() %>%
addTiles(urlTemplate = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
setView(lng = st_coordinates(centroidIca)[1], lat = st_coordinates(centroidIca)[2], zoom = 10)
# Añadir la capa de mapa de calor
map <- map %>%
addHeatmap(lng = coords[,1], lat = coords[,2], blur = 20, max = 0.05)
# Mostrar el mapa
map
saveRDS(map, file = "hm_Ica.rds")
library(rio)
export(mod_order,"modalidades.xlsx")
library(ggthemes)
bar_tipo=ggplot(tipo_delitos, aes(x = reorder(Var1, -Freq), y = Freq)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de Tipos de Delitos",
x = "Tipo de Delito",
y = "Numero de denuncias") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
bar_tipo
saveRDS(bar_tipo, file = "tipos_Ica.rds")
saveRDS(mapa1, "turnos_map.rds")
library(leaflet)
mapa1 <- leaflet() %>%
addTiles() %>%
fitBounds(-15.36183, -13.07651, -76.31845, -74.93670) %>%
addCircleMarkers(data = delitos,
lng = ~long_hecho,
lat = ~lat_hecho,
color = ~color_turno,
radius = 6,
fill = TRUE,
fillOpacity = 0.2,
opacity = 0.6,
popup = ~paste(distrito, provincia, sep = "")) %>%
addPolygons(data = mapDIST, # Agregar las divisiones distritales
color = "black", # Color del borde
fillColor = "transparent", # Color de relleno transparente
fillOpacity = 0.5, # Opacidad del relleno
weight = 1) # Grosor del borde
library(ggplot2)
library(sp)
mapDIST=sf::read_sf("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/distritos_1874/DISTRITOS1874.shp")
ggplot(mapDIST) + geom_sf()
asignar_color <- function(turno) {
colores <- c("madrugada" = "blue", "mañana" = "green", "tarde" = "orange", "noche" = "red")
return(colores[turno])
}
delitos$color_turno <- asignar_color(delitos$turno_hech)
library(leaflet)
mapa1 <- leaflet() %>%
addTiles() %>%
fitBounds(-15.36183, -13.07651, -76.31845, -74.93670) %>%
addCircleMarkers(data = delitos,
lng = ~long_hecho,
lat = ~lat_hecho,
color = ~color_turno,
radius = 6,
fill = TRUE,
fillOpacity = 0.2,
opacity = 0.6,
popup = ~paste(distrito, provincia, sep = "")) %>%
addPolygons(data = mapDIST, # Agregar las divisiones distritales
color = "black", # Color del borde
fillColor = "transparent", # Color de relleno transparente
fillOpacity = 0.5, # Opacidad del relleno
weight = 1) # Grosor del borde
# Agregar leyenda
mapa1 <- mapa1 %>%
addLegend("bottomleft",
colors = c("blue", "green", "orange", "red"),
labels = c("Madrugada", "Mañana", "Tarde", "Noche"),
opacity = 0.8)
# Visualizar el mapa final
mapa1
saveRDS(mapa1, "turnos_map.rds")
turno=table(patrimoniales$turno_hech)
turnos=as.data.frame(turno)
View(turnos)
library(ggthemes)
bar_turno=ggplot(turnos, aes(x = reorder(Var1, -Freq), y = Freq)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frecuencia de los turnos de ocurrencia",
x = "Turno de delitos",
y = "Numero de denuncias") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
bar_turno+theme_base()
bar_turno+theme_calc()
bar_turno+theme_economist_white()
bar_turno+theme_economist()
library(ggthemes)
bar_turno=ggplot(turnos, aes(x = reorder(Var1, -Freq), y = Freq)) +
geom_bar(stat = "identity", width = 0.5) +
theme_minimal() +
labs(title = "Frecuencia de los turnos de ocurrencia",
x = "Turno de delitos",
y = "Numero de denuncias") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad
bar_turno+theme_economist()
saveRDS(bar_turno,"bar_turno.rds")
library(flexdashboard) # always
readRDS("hm_Ica.rds")
library(flexdashboard)
library(kableExtra)
library(rio)# always
dist_Ica <- patrimoniales %>%
group_by(distrito) %>%
summarise(total_denuncias = sum(one))
dist_Ica
View(dist_Ica)
export(dist_Ica, "dist_Ica.xlsx")
dist_order=distritos%>%arrange(desc(total_denuncias))
distritos=import("dist_Ica.xlsx")
dist_order=distritos%>%arrange(desc(total_denuncias))
View(dist_order)
dist_order=select(dist_order,c(1,2))
View(dist_order)
export(dist_order, "dist_order.xlsx")
readRDS("tipos_Ica.rds")
distritos_delitos=import("dist_order.xslx")
distritos_delitos=import("dist_order.xlsx")
head(distritos_delitos,30)%>%kbl()%>%kable_styling()
readRDS("bar_turno.rds")
library(ggthemes)
barra_turnos=readRDS("bar_turno.rds")
barra_turnos+theme_economist_white()
barra_turnos+theme_excel()
barra_turnos+theme_economist()
readRDS("turnos_map.rds")
modalidades_Ica=import("mod_order.xlsx")
modalidades_Ica=import("modalidades.xlsx")
head(modalidades_Ica,30)%>%kbl()%>%kable_styling()
